{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kjtke\\\\OneDrive\\\\Desktop\\\\WORK\\\\02_\\u72AC\\u30A2\\u30FC\\u30AD\\u30CD\\u30FC\\u30BF\\u30FC\\\\dog-breed-identifier\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"./firebase.js\";\nimport Question from './Question.js';\nimport Result from './Result.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [selectedBreed, setSelectedBreed] = useState(null);\n  const [breedMapping, setBreedMapping] = useState({});\n  // firebase„Åã„Çâ„Éá„Éº„Çø„ÇíÂèñÂæó„Åô„Çã\n  useEffect(() => {\n    const fetchBreeds = async () => {\n      const querySnapshot = await getDocs(collection(db, \"breeds\"));\n      const breedsData = {};\n      querySnapshot.forEach(doc => {\n        breedsData[doc.id] = doc.data();\n      });\n      setBreedMapping(breedsData);\n    };\n    fetchBreeds();\n  }, []);\n  const questions = [{\n    question: \"ËÄ≥„ÅØÁ´ã„Å£„Å¶„ÅÑ„Åæ„Åô„ÅãÔºü\",\n    options: [\"„ÅØ„ÅÑ\", \"„ÅÑ„ÅÑ„Åà\"]\n  }, {\n    question: \"ËÉ¥„ÅØÈï∑„ÅÑ„Åß„Åô„ÅãÔºü\",\n    options: [\"„ÅØ„ÅÑ\", \"„ÅÑ„ÅÑ„Åà\"]\n  }, {\n    question: \"Ë∂≥„ÅØÈï∑„ÅÑ„Åß„Åô„ÅãÔºü\",\n    options: [\"„ÅØ„ÅÑ\", \"„ÅÑ„ÅÑ„Åà\"]\n  }];\n  const determineBreed = answers => {\n    const conditions = {\n      \"„ÅØ„ÅÑ-„ÅØ„ÅÑ-„ÅØ„ÅÑ\": \"germanshepherd\",\n      \"„ÅØ„ÅÑ-„ÅØ„ÅÑ-„ÅÑ„ÅÑ„Åà\": \"corgi\",\n      \"„ÅØ„ÅÑ-„ÅÑ„ÅÑ„Åà-„ÅØ„ÅÑ\": \"doberman\",\n      \"„ÅÑ„ÅÑ„Åà-„ÅØ„ÅÑ-„ÅØ„ÅÑ\": \"dachshund\",\n      \"„ÅÑ„ÅÑ„Åà-„ÅÑ„ÅÑ„Åà-„ÅØ„ÅÑ\": \"labrador\",\n      \"„ÅÑ„ÅÑ„Åà-„ÅÑ„ÅÑ„Åà-„ÅÑ„ÅÑ„Åà\": \"pug\"\n    };\n    const key = answers.join(\"-\");\n    const breedKey = conditions[key] || \"pug\";\n    return {\n      en: breedKey,\n      ...breedMapping[breedKey]\n    };\n  };\n  // ÂõûÁ≠îÂÜÖÂÆπ„ÇíÈÖçÂàó„Å´Ê†ºÁ¥ç„Åô„Çã\n  const handleAnswer = answer => {\n    const updatedAnswers = [...answers, answer];\n    setAnswers(updatedAnswers);\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      const breed = determineBreed(updatedAnswers);\n      setSelectedBreed(breed);\n    }\n  };\n\n  // „ÇÇ„ÅÜ‰∏ÄÂ∫¶Ë®∫Êñ≠„Çí„Åô„ÇãÔºàÁä∂ÊÖã„Çí„É™„Çª„ÉÉ„ÉàÔºâ\n  const retryDiagnosis = () => {\n    setCurrentQuestion(0);\n    setAnswers([]);\n    setSelectedBreed(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-4 text-primary\",\n      children: \"\\u3042\\u306E\\u72AC\\u306E\\u7A2E\\u985E\\u306F\\uFF1F\\uD83D\\uDC15\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), selectedBreed ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Result, {\n        breed: selectedBreed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger mt-3\",\n        onClick: retryDiagnosis,\n        children: \"\\u3082\\u3046\\u4E00\\u5EA6\\u8A3A\\u65AD\\u3059\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Question, {\n      question: questions[currentQuestion].question,\n      options: questions[currentQuestion].options,\n      onAnswer: handleAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ALbTc8+DtUrbyEM+JO/MZkmO3VI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","collection","getDocs","db","Question","Result","jsxDEV","_jsxDEV","App","_s","currentQuestion","setCurrentQuestion","answers","setAnswers","selectedBreed","setSelectedBreed","breedMapping","setBreedMapping","fetchBreeds","querySnapshot","breedsData","forEach","doc","id","data","questions","question","options","determineBreed","conditions","key","join","breedKey","en","handleAnswer","answer","updatedAnswers","length","breed","retryDiagnosis","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAnswer","_c","$RefreshReg$"],"sources":["C:/Users/kjtke/OneDrive/Desktop/WORK/02_Áä¨„Ç¢„Éº„Ç≠„Éç„Éº„Çø„Éº/dog-breed-identifier/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"./firebase.js\";\nimport Question from './Question.js';\nimport Result from './Result.js';\n\nfunction App() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [selectedBreed, setSelectedBreed] = useState(null);\n  const [breedMapping, setBreedMapping] = useState({});\n// firebase„Åã„Çâ„Éá„Éº„Çø„ÇíÂèñÂæó„Åô„Çã\n  useEffect(() => {\n    const fetchBreeds = async () => {\n      const querySnapshot = await getDocs(collection(db, \"breeds\"));\n      const breedsData = {};\n      querySnapshot.forEach(doc => {\n        breedsData[doc.id] = doc.data();\n      });\n      setBreedMapping(breedsData);\n    };\n\n    fetchBreeds();\n  }, []);\n\n  const questions = [\n    { question: \"ËÄ≥„ÅØÁ´ã„Å£„Å¶„ÅÑ„Åæ„Åô„ÅãÔºü\", options: [\"„ÅØ„ÅÑ\", \"„ÅÑ„ÅÑ„Åà\"] },\n    { question: \"ËÉ¥„ÅØÈï∑„ÅÑ„Åß„Åô„ÅãÔºü\", options: [\"„ÅØ„ÅÑ\", \"„ÅÑ„ÅÑ„Åà\"] },\n    { question: \"Ë∂≥„ÅØÈï∑„ÅÑ„Åß„Åô„ÅãÔºü\", options: [\"„ÅØ„ÅÑ\", \"„ÅÑ„ÅÑ„Åà\"] }\n  ];\n\n  const determineBreed = (answers) => {\n    const conditions = {\n      \"„ÅØ„ÅÑ-„ÅØ„ÅÑ-„ÅØ„ÅÑ\": \"germanshepherd\",\n      \"„ÅØ„ÅÑ-„ÅØ„ÅÑ-„ÅÑ„ÅÑ„Åà\": \"corgi\",\n      \"„ÅØ„ÅÑ-„ÅÑ„ÅÑ„Åà-„ÅØ„ÅÑ\": \"doberman\",\n      \"„ÅÑ„ÅÑ„Åà-„ÅØ„ÅÑ-„ÅØ„ÅÑ\": \"dachshund\",\n      \"„ÅÑ„ÅÑ„Åà-„ÅÑ„ÅÑ„Åà-„ÅØ„ÅÑ\": \"labrador\",\n      \"„ÅÑ„ÅÑ„Åà-„ÅÑ„ÅÑ„Åà-„ÅÑ„ÅÑ„Åà\": \"pug\"\n    };\n\n    const key = answers.join(\"-\");\n    const breedKey = conditions[key] || \"pug\";\n    return { en: breedKey, ...breedMapping[breedKey] };\n  };\n// ÂõûÁ≠îÂÜÖÂÆπ„ÇíÈÖçÂàó„Å´Ê†ºÁ¥ç„Åô„Çã\n  const handleAnswer = (answer) => {\n    const updatedAnswers = [...answers, answer];\n    setAnswers(updatedAnswers);\n\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      const breed = determineBreed(updatedAnswers);\n      setSelectedBreed(breed);\n    }\n  };\n\n    // „ÇÇ„ÅÜ‰∏ÄÂ∫¶Ë®∫Êñ≠„Çí„Åô„ÇãÔºàÁä∂ÊÖã„Çí„É™„Çª„ÉÉ„ÉàÔºâ\n    const retryDiagnosis = () => {\n      setCurrentQuestion(0);\n      setAnswers([]);\n      setSelectedBreed(null);\n    };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"mt-4 text-primary\">„ÅÇ„ÅÆÁä¨„ÅÆÁ®ÆÈ°û„ÅØÔºüüêï</h1>\n      {selectedBreed ? (\n        <div>\n        <Result breed={selectedBreed} />\n        <button className=\"btn btn-danger mt-3\" onClick={retryDiagnosis}>\n          „ÇÇ„ÅÜ‰∏ÄÂ∫¶Ë®∫Êñ≠„Åô„Çã\n        </button>\n      </div>\n      ) : (\n        <Question\n          question={questions[currentQuestion].question}\n          options={questions[currentQuestion].options}\n          onAnswer={handleAnswer}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}