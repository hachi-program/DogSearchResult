{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kjtke\\\\OneDrive\\\\Desktop\\\\WORK\\\\\\u72AC\\u30A2\\u30FC\\u30AD\\u30CD\\u30FC\\u30BF\\u30FC\\\\dog-breed-identifier\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport Result from './Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]); // ユーザーの回答を保存\n  const [selectedBreed, setSelectedBreed] = useState(null);\n\n  // 質問リスト\n  const questions = [{\n    question: \"耳は立っていますか？\",\n    options: [\"はい\", \"いいえ\"]\n  }, {\n    question: \"体の大きさは？\",\n    options: [\"小さい\", \"中くらい\", \"大きい\"]\n  }, {\n    question: \"毛の長さは？\",\n    options: [\"短い\", \"中くらい\", \"長い\"]\n  }];\n\n  // 回答の組み合わせで犬種を特定（シンプルな例）\n  const determineBreed = answers => {\n    if (answers[0] === \"はい\" && answers[1] === \"小さい\") {\n      return \"shiba\"; // 柴犬\n    } else if (answers[0] === \"いいえ\" && answers[1] === \"大きい\") {\n      return \"retriever/golden\"; // ゴールデンレトリバー\n    } else {\n      return \"beagle\"; // デフォルトの犬種\n    }\n  };\n  const handleAnswer = answer => {\n    const updatedAnswers = [...answers, answer];\n    setAnswers(updatedAnswers);\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      const breed = determineBreed(updatedAnswers);\n      setSelectedBreed(breed); // 犬種を決定\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-4\",\n      children: \"\\u72AC\\u7A2E\\u5224\\u5B9A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), selectedBreed ? /*#__PURE__*/_jsxDEV(Result, {\n      breed: selectedBreed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Question, {\n      question: questions[currentQuestion].question,\n      options: questions[currentQuestion].options,\n      onAnswer: handleAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6ykdojmpO6P5PNDw9G7p1nrXaY8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Question","Result","jsxDEV","_jsxDEV","App","_s","currentQuestion","setCurrentQuestion","answers","setAnswers","selectedBreed","setSelectedBreed","questions","question","options","determineBreed","handleAnswer","answer","updatedAnswers","length","breed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAnswer","_c","$RefreshReg$"],"sources":["C:/Users/kjtke/OneDrive/Desktop/WORK/犬アーキネーター/dog-breed-identifier/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Question from './Question';\nimport Result from './Result';\n\nfunction App() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]); // ユーザーの回答を保存\n  const [selectedBreed, setSelectedBreed] = useState(null);\n\n  // 質問リスト\n  const questions = [\n    { question: \"耳は立っていますか？\", options: [\"はい\", \"いいえ\"] },\n    { question: \"体の大きさは？\", options: [\"小さい\", \"中くらい\", \"大きい\"] },\n    { question: \"毛の長さは？\", options: [\"短い\", \"中くらい\", \"長い\"] }\n  ];\n\n  // 回答の組み合わせで犬種を特定（シンプルな例）\n  const determineBreed = (answers) => {\n    if (answers[0] === \"はい\" && answers[1] === \"小さい\") {\n      return \"shiba\";  // 柴犬\n    } else if (answers[0] === \"いいえ\" && answers[1] === \"大きい\") {\n      return \"retriever/golden\";  // ゴールデンレトリバー\n    } else {\n      return \"beagle\"; // デフォルトの犬種\n    }\n  };\n\n  const handleAnswer = (answer) => {\n    const updatedAnswers = [...answers, answer];\n    setAnswers(updatedAnswers);\n\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      const breed = determineBreed(updatedAnswers);\n      setSelectedBreed(breed); // 犬種を決定\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"mt-4\">犬種判定</h1>\n      {selectedBreed ? (\n        <Result breed={selectedBreed} />\n      ) : (\n        <Question\n          question={questions[currentQuestion].question}\n          options={questions[currentQuestion].options}\n          onAnswer={handleAnswer}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA,MAAMa,SAAS,GAAG,CAChB;IAAEC,QAAQ,EAAE,YAAY;IAAEC,OAAO,EAAE,CAAC,IAAI,EAAE,KAAK;EAAE,CAAC,EAClD;IAAED,QAAQ,EAAE,SAAS;IAAEC,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK;EAAE,CAAC,EACxD;IAAED,QAAQ,EAAE,QAAQ;IAAEC,OAAO,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI;EAAE,CAAC,CACtD;;EAED;EACA,MAAMC,cAAc,GAAIP,OAAO,IAAK;IAClC,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;MAC/C,OAAO,OAAO,CAAC,CAAE;IACnB,CAAC,MAAM,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK,IAAIA,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE;MACvD,OAAO,kBAAkB,CAAC,CAAE;IAC9B,CAAC,MAAM;MACL,OAAO,QAAQ,CAAC,CAAC;IACnB;EACF,CAAC;EAED,MAAMQ,YAAY,GAAIC,MAAM,IAAK;IAC/B,MAAMC,cAAc,GAAG,CAAC,GAAGV,OAAO,EAAES,MAAM,CAAC;IAC3CR,UAAU,CAACS,cAAc,CAAC;IAE1B,IAAIZ,eAAe,GAAGM,SAAS,CAACO,MAAM,GAAG,CAAC,EAAE;MAC1CZ,kBAAkB,CAACD,eAAe,GAAG,CAAC,CAAC;IACzC,CAAC,MAAM;MACL,MAAMc,KAAK,GAAGL,cAAc,CAACG,cAAc,CAAC;MAC5CP,gBAAgB,CAACS,KAAK,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA;MAAIkB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7BhB,aAAa,gBACZP,OAAA,CAACF,MAAM;MAACmB,KAAK,EAAEV;IAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEhCvB,OAAA,CAACH,QAAQ;MACPa,QAAQ,EAAED,SAAS,CAACN,eAAe,CAAC,CAACO,QAAS;MAC9CC,OAAO,EAAEF,SAAS,CAACN,eAAe,CAAC,CAACQ,OAAQ;MAC5Ca,QAAQ,EAAEX;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrB,EAAA,CAjDQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}